apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: pgvector
        image: ankane/pgvector:latest
        env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-password
                key: password
        ports:
          - containerPort: {{ .Values.postgres.port }}
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.port }}
      targetPort: {{ .Values.postgres.port }}
      nodePort: 30001   # Port exposed externally by the node
  type: NodePort

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-password
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
type: Opaque
data:
  password: {{ .Values.postgres.password | b64enc }}

